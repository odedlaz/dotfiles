#!/usr/bin/env fish

set DIR (dirname (readlink -f (status -f)))

# poor mans optarg :)
set rm_flags
for item in $argv
    switch "$item"
        case -f --force
           set rm_flags $rm_flags "-f"
         case -i --interactive
            set rm_flags $rm_flags "-i"
    end
end


function link -a 'from' 'to'
   if test (count $rm_flags) -gt 0
      set_color 'yellow'
      rm -v $rm_flags $to
      set_color 'normal'
   end

   if test -d $to ;or test -f $to
      set_color 'red'
      echo "can't link '$from' -> '$to': destination already exists"
      set_color 'normal'
      return 1
   end

   ln -v -s $from $to
end

function recursive_link -a 'from' 'to'
	# if $from is a file -> link it
	# if $from is a dir, and $to doesn't exist -> link it
	# otherwise, walk $from

   if test -d $from
      if test -e $to; and not test -d $to
         set_color 'red'
         echo "'$from' is a directory, '$to' is not: "(file $to)
         set_color 'normal'
         return 1
      end

      if not test -d $to
         mkdir -p $to
      end
   end

	if test -f $from; or test -d $from;and not test -d $to
      link $from $to
      return $status
	end

	for path in $from/{.??,}*
		recursive_link $path $to/(basename $path)
	end
end


recursive_link "$DIR/fish" "$HOME/.config/fish"
recursive_link "$DIR/oh-my-fish" "$HOME/.config/omf"
if not test -f "$HOME/.local/share/omf"
   echo "installing fish plugin manager..."
   curl -L https://get.oh-my.fish | fish
end


recursive_link "$DIR/neovim/init.vim" "$HOME/.vimrc"
recursive_link "$DIR/neovim" "$HOME/.config/nvim"

for python_ver in "python3" "python2"
   mkdir -p "/opt/nvim/$python_ver"
   link "$DIR/neovim/python/update.fish" "/opt/nvim/$python_ver/update.fish"
   link "$DIR/neovim/python/requirements.txt" "/opt/nvim/$python_ver/requirements.txt"
   link "$DIR/neovim/python/$python_ver.envrc" "/opt/nvim/$python_ver/.envrc"
end

# install vim-plug
set vim_plug_dir "$HOME/.local/share/nvim/site/autoload"
if not test -f "$vim_plug_dir/plug.vim"
   echo "installing vim-plug..."
   mkdir -p "$vim_plug_dir" ;and \
   curl -sfLo "$vim_plug_dir/plug.vim" --create-dirs \
       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
end

recursive_link "$DIR/tmux" "$HOME/.tmux"
recursive_link "$DIR/tmux/tmux.conf" "$HOME/.tmux.conf"
if not test -f "$HOME/.tmux/plugins/tpm"
   echo "installing tmux plugin manager..."
   git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm
end

recursive_link "$DIR/ctags" "$HOME/.ctags"

link "$DIR/gnome-shell/extensions" "$HOME/.local/share/gnome-shell/extensions"
